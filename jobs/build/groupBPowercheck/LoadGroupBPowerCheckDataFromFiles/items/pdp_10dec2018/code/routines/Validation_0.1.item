package routines;

import java.net.URL;
import java.util.Arrays;
import java.util.List;

import jdk.nashorn.internal.parser.JSONParser;

public class Validation {

    
   
    
    public static boolean isValidEmailAddress(String email) {
        String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
        java.util.regex.Matcher m = p.matcher(email);
        return m.matches();
    }
    
    public static String isBlankJson(String string) {
    	//System.out.println("old: "+string);
    	if(string==null){ return null; }
    	
    	if(string.trim().compareToIgnoreCase("")==0){ return null; }
    	String newSstring= JSONParser.quote(string);    	
    	
        return newSstring;
    }
    
    
    
    public static String[] addStringToArray(String[] stringArray, String newValue)
    {
        String[] tempArray = new String[ stringArray.length + 1 ];
        for (int i=0; i<stringArray.length; i++)
        {
            tempArray[i] = stringArray[i];
        }
        tempArray[stringArray.length] = newValue;
        return tempArray;
    }
    
    
    public static boolean checkIfValueExistInArray(String[] stringArray, String newValue)
    {
    	

         // Convert String Array to List
         List<String> list = Arrays.asList(stringArray);
        
         if (list.contains(newValue)) {
        	 return true; 
         }
         return false; 
    }
    
    
    /* Returns true if url is valid */
    public static boolean isValidUrl(String url) 
    { 
        /* Try creating a valid URL */
        try { 
            new URL(url).toURI(); 
            return true; 
        } 
          
        // If there was an Exception 
        // while creating URL object 
        catch (Exception e) { 
            return false; 
        } 
    }
}
