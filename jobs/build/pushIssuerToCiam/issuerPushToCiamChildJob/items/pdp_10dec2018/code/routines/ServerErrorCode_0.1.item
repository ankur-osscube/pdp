package routines;

public class ServerErrorCode {

    
    public static String toMessage(int serverErrorCode) {
    	  String serverErrorString; 
   
         // switch statement with int data type 
         switch (serverErrorCode) { 
         case 100: 
             serverErrorString = "100 Continue"; 
             break; 
         case 101: 
             serverErrorString = "101 Switching Protocol"; 
             break; 
         case 102: 
             serverErrorString = "102 Processing (WebDAV)"; 
             break; 
         case 200: 
             serverErrorString = "200 OK"; 
             break; 
         case 201: 
             serverErrorString = "201 Created"; 
             break; 
         case 202: 
             serverErrorString = "202 Accepted"; 
             break; 
         case 203: 
             serverErrorString = "203 Non-Authoritative Information"; 
             break; 
	case 204: 
             serverErrorString = "204 No Content"; 
             break; 
         case 205: 
             serverErrorString = "205 Reset Content"; 
             break; 
         case 206: 
             serverErrorString = "206 Partial Content"; 
             break; 
         case 207: 
	 case 208: 
             serverErrorString = "207 Multi-Status (WebDAV)"; 
             break; 
         case 226: 
             serverErrorString = "226 IM Used"; 
             break; 
         case 300: 
             serverErrorString = "300 Multiple Choice"; 
             break; 
         case 301: 
             serverErrorString = "301 Moved Permanently"; 
             break; 
	 case 302: 
             serverErrorString = "302 Found"; 
             break; 
         case 303: 
             serverErrorString = "303 See Other"; 
             break; 
         case 304: 
             serverErrorString = "304 Not Modified"; 
             break; 
         case 305: 
             serverErrorString = "305 Use Proxy"; 
             break; 
         case 306: 
             serverErrorString = "306 Unused"; 
             break; 
         case 307: 
             serverErrorString = "307 Temporary Redirect"; 
             break; 
         case 308: 
             serverErrorString = "308 Permanent Redirect"; 
             break; 
	case 400: 
             serverErrorString = "400  Bad Request"; 
             break; 
         case 401: 
             serverErrorString = "401 Unauthorized"; 
             break; 
         case 402: 
             serverErrorString = "402 Payment Required"; 
             break; 
         case 403: 
             serverErrorString = "403Forbidden"; 
             break; 
         case 404: 
             serverErrorString = "404 Not Found"; 
             break; 
         case 405: 
             serverErrorString = "405 Method Not Allowed"; 
             break; 
         case 406: 
             serverErrorString = "406 Not Acceptable"; 
             break; 
	case 407: 
             serverErrorString = "407 Proxy Authentication Required"; 
             break; 
         case 408: 
             serverErrorString = "408 Request Timeout"; 
             break; 
         case 409: 
             serverErrorString = "409 Conflict"; 
             break; 
         case 410: 
             serverErrorString = "410 Gone"; 
             break; 
         case 411: 
             serverErrorString = "411 Length Required"; 
             break; 
         case 412: 
             serverErrorString = "412 Precondition Failed"; 
             break; 
	case 413: 
             serverErrorString = "413 Payload Too Large"; 
             break; 
        case 414: 
             serverErrorString = "414 URI Too Long"; 
             break; 
         case 415: 
             serverErrorString = "415 Unsupported Media Type"; 
             break; 
         case 416: 
             serverErrorString = "416 Requested Range Not Satisfiable"; 
             break; 
         case 417: 
             serverErrorString = "417 Expectation Failed"; 
             break; 
         case 418: 
             serverErrorString = "418 I'm a teapot"; 
             break; 
         case 421: 
             serverErrorString = "421 Misdirected Request"; 
             break;
        case 422: 
             serverErrorString = "422 Unprocessable Entity (WebDAV)"; 
             break; 
         case 423: 
             serverErrorString = "423 Locked (WebDAV)"; 
             break; 
         case 424: 
             serverErrorString = "424 Failed Dependency (WebDAV)"; 
             break; 
         case 426: 
             serverErrorString = "426 Upgrade Required"; 
             break; 
         case 428: 
             serverErrorString = "428 Precondition Required"; 
             break; 
         case 429: 
             serverErrorString = "429 Too Many Requests"; 
             break;
	 case 431: 
             serverErrorString = "431 Request Header Fields Too Large"; 
             break; 
         case 451: 
             serverErrorString = "451 Unavailable For Legal Reasons"; 
             break; 
         case 500: 
             serverErrorString = "500 Internal Server Error"; 
             break; 
         case 501: 
             serverErrorString = "501 Not Implemented"; 
             break; 
         case 502: 
             serverErrorString = "502 Bad Gateway"; 
             break; 
         case 503: 
             serverErrorString = "503 Service Unavailable"; 
             break;  
	 case 504: 
             serverErrorString = "504 Gateway Timeout"; 
             break; 
         case 505: 
             serverErrorString = "505 HTTP Version Not Supported"; 
             break; 
         case 506: 
             serverErrorString = "506 Variant Also Negotiates"; 
             break; 
         case 507: 
             serverErrorString = "507 Insufficient Storage"; 
             break; 
         case 508: 
             serverErrorString = "508 Loop Detected (WebDAV)"; 
             break; 
         case 510: 
             serverErrorString = "510 Not Extended"; 
             break;  
	case 511: 
             serverErrorString = "511 Network Authentication Required"; 
             break;          
         default: 
             serverErrorString = "Some error occur"; 
             break; 
         } 
       // System.out.println(serverErrorString); 
        return serverErrorString;
    }
}
